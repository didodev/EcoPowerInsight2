{"version":3,"sources":["Forecast.js","App.js","reportWebVitals.js","index.js"],"names":["Forecast","data","setData","useState","error","setError","useEffect","async","response","axios","get","console","log","Papa","parse","header","complete","results","err","fetchData","React","createElement","map","item","index","key","JSON","stringify","App","className","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"oNAkDeA,MA9CEA,KACf,MAAOC,EAAMC,GAAWC,mBAAS,OAC1BC,EAAOC,GAAYF,mBAAS,MAwBnC,OAtBAG,oBAAU,KACUC,WAEhB,IACE,MAAMC,QAAiBC,IAAMC,IAFhB,qMAGbC,QAAQC,IAAIJ,EAASP,MACrBY,IAAKC,MAAMN,EAASP,KAAM,CACxBc,QAAQ,EACRC,SAAWC,IACTN,QAAQC,IAAIK,EAAQhB,MACpBC,EAAQe,EAAQhB,SAGpB,MAAOiB,GACPP,QAAQP,MAAMc,GACdb,EAAS,0BAIbc,IACC,IAECf,EACKgB,IAAAC,cAAA,WAAK,UAAQjB,GAGjBH,EAKHmB,IAAAC,cAAA,WACED,IAAAC,cAAA,UAAI,iCACJD,IAAAC,cAAA,UACGpB,EAAKqB,IAAI,CAACC,EAAMC,IACfJ,IAAAC,cAAA,MAAII,IAAKD,GAAQE,KAAKC,UAAUJ,OAR/BH,IAAAC,cAAA,WAAK,eCrBDO,MAVf,WACE,OACER,IAAAC,cAAA,OAAKQ,UAAU,OACbT,IAAAC,cAAA,UAAQQ,UAAU,cAChBT,IAAAC,cAACrB,EAAQ,SCIF8B,MAZSC,IAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,UAAqBD,KAAKE,IAAiD,IAAhDC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,QAAEA,GAASL,EACpEC,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAOV,GACPW,EAAQX,MCDDY,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACH3B,IAAAC,cAACD,IAAM4B,WAAU,KACf5B,IAAAC,cAACO,EAAG,QAORE","file":"static/js/main.43eea2ce.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport Papa from 'papaparse';\r\n\r\nconst Forecast = () => {\r\n  const [data, setData] = useState(null);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const apiUrl = 'curl -L -s \"https://api.nationalgrideso.com/api/3/action/datastore_search_sql?sql=SELECT%20*%20FROM%20%20%226f7408b4-47fd-4ae7-b1e5-f095a3a5a2dc%22%20ORDER%20BY%20%22_id%22%20ASC%20LIMIT%20100\"';\r\n      try {\r\n        const response = await axios.get(apiUrl);\r\n        console.log(response.data); // Log the data to check if it's being fetched\r\n        Papa.parse(response.data, {\r\n          header: true,\r\n          complete: (results) => {\r\n            console.log(results.data); // Log parsed data\r\n            setData(results.data);\r\n          },\r\n        });\r\n      } catch (err) {\r\n        console.error(err); // Log the error to understand what went wrong\r\n        setError('Failed to fetch data');\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  if (error) {\r\n    return <div>Error: {error}</div>;\r\n  }\r\n\r\n  if (!data) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>7-Day Ahead National Forecast</h1>\r\n      <ul>\r\n        {data.map((item, index) => (\r\n          <li key={index}>{JSON.stringify(item)}</li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Forecast;\r\n","import React from 'react';\nimport './App.css';\nimport Forecast from './Forecast';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Forecast />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}